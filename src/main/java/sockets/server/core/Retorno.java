/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package sockets.server.core;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Retorno implements org.apache.thrift.TBase<Retorno, Retorno._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Retorno");

  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField VERSAO_FIELD_DESC = new org.apache.thrift.protocol.TField("versao", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CRIADO_FIELD_DESC = new org.apache.thrift.protocol.TField("criado", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField MODIFICADO_FIELD_DESC = new org.apache.thrift.protocol.TField("modificado", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField CONTEUDO_FIELD_DESC = new org.apache.thrift.protocol.TField("conteudo", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new RetornoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new RetornoTupleSchemeFactory());
  }

  /**
   * 
   * @see RetornoStatus
   */
  public RetornoStatus status; // required
  public long versao; // required
  public long criado; // required
  public long modificado; // required
  public ByteBuffer conteudo; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see RetornoStatus
     */
    STATUS((short)1, "status"),
    VERSAO((short)2, "versao"),
    CRIADO((short)3, "criado"),
    MODIFICADO((short)4, "modificado"),
    CONTEUDO((short)5, "conteudo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STATUS
          return STATUS;
        case 2: // VERSAO
          return VERSAO;
        case 3: // CRIADO
          return CRIADO;
        case 4: // MODIFICADO
          return MODIFICADO;
        case 5: // CONTEUDO
          return CONTEUDO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __VERSAO_ISSET_ID = 0;
  private static final int __CRIADO_ISSET_ID = 1;
  private static final int __MODIFICADO_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.CONTEUDO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, RetornoStatus.class)));
    tmpMap.put(_Fields.VERSAO, new org.apache.thrift.meta_data.FieldMetaData("versao", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CRIADO, new org.apache.thrift.meta_data.FieldMetaData("criado", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MODIFICADO, new org.apache.thrift.meta_data.FieldMetaData("modificado", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONTEUDO, new org.apache.thrift.meta_data.FieldMetaData("conteudo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Retorno.class, metaDataMap);
  }

  public Retorno() {
  }

  public Retorno(
    RetornoStatus status,
    long versao,
    long criado,
    long modificado)
  {
    this();
    this.status = status;
    this.versao = versao;
    setVersaoIsSet(true);
    this.criado = criado;
    setCriadoIsSet(true);
    this.modificado = modificado;
    setModificadoIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Retorno(Retorno other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    this.versao = other.versao;
    this.criado = other.criado;
    this.modificado = other.modificado;
    if (other.isSetConteudo()) {
      this.conteudo = org.apache.thrift.TBaseHelper.copyBinary(other.conteudo);
;
    }
  }

  public Retorno deepCopy() {
    return new Retorno(this);
  }

  @Override
  public void clear() {
    this.status = null;
    setVersaoIsSet(false);
    this.versao = 0;
    setCriadoIsSet(false);
    this.criado = 0;
    setModificadoIsSet(false);
    this.modificado = 0;
    this.conteudo = null;
  }

  /**
   * 
   * @see RetornoStatus
   */
  public RetornoStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see RetornoStatus
   */
  public Retorno setStatus(RetornoStatus status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public long getVersao() {
    return this.versao;
  }

  public Retorno setVersao(long versao) {
    this.versao = versao;
    setVersaoIsSet(true);
    return this;
  }

  public void unsetVersao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VERSAO_ISSET_ID);
  }

  /** Returns true if field versao is set (has been assigned a value) and false otherwise */
  public boolean isSetVersao() {
    return EncodingUtils.testBit(__isset_bitfield, __VERSAO_ISSET_ID);
  }

  public void setVersaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VERSAO_ISSET_ID, value);
  }

  public long getCriado() {
    return this.criado;
  }

  public Retorno setCriado(long criado) {
    this.criado = criado;
    setCriadoIsSet(true);
    return this;
  }

  public void unsetCriado() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CRIADO_ISSET_ID);
  }

  /** Returns true if field criado is set (has been assigned a value) and false otherwise */
  public boolean isSetCriado() {
    return EncodingUtils.testBit(__isset_bitfield, __CRIADO_ISSET_ID);
  }

  public void setCriadoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CRIADO_ISSET_ID, value);
  }

  public long getModificado() {
    return this.modificado;
  }

  public Retorno setModificado(long modificado) {
    this.modificado = modificado;
    setModificadoIsSet(true);
    return this;
  }

  public void unsetModificado() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MODIFICADO_ISSET_ID);
  }

  /** Returns true if field modificado is set (has been assigned a value) and false otherwise */
  public boolean isSetModificado() {
    return EncodingUtils.testBit(__isset_bitfield, __MODIFICADO_ISSET_ID);
  }

  public void setModificadoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MODIFICADO_ISSET_ID, value);
  }

  public byte[] getConteudo() {
    setConteudo(org.apache.thrift.TBaseHelper.rightSize(conteudo));
    return conteudo == null ? null : conteudo.array();
  }

  public ByteBuffer bufferForConteudo() {
    return conteudo;
  }

  public Retorno setConteudo(byte[] conteudo) {
    setConteudo(conteudo == null ? (ByteBuffer)null : ByteBuffer.wrap(conteudo));
    return this;
  }

  public Retorno setConteudo(ByteBuffer conteudo) {
    this.conteudo = conteudo;
    return this;
  }

  public void unsetConteudo() {
    this.conteudo = null;
  }

  /** Returns true if field conteudo is set (has been assigned a value) and false otherwise */
  public boolean isSetConteudo() {
    return this.conteudo != null;
  }

  public void setConteudoIsSet(boolean value) {
    if (!value) {
      this.conteudo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((RetornoStatus)value);
      }
      break;

    case VERSAO:
      if (value == null) {
        unsetVersao();
      } else {
        setVersao((Long)value);
      }
      break;

    case CRIADO:
      if (value == null) {
        unsetCriado();
      } else {
        setCriado((Long)value);
      }
      break;

    case MODIFICADO:
      if (value == null) {
        unsetModificado();
      } else {
        setModificado((Long)value);
      }
      break;

    case CONTEUDO:
      if (value == null) {
        unsetConteudo();
      } else {
        setConteudo((ByteBuffer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case STATUS:
      return getStatus();

    case VERSAO:
      return Long.valueOf(getVersao());

    case CRIADO:
      return Long.valueOf(getCriado());

    case MODIFICADO:
      return Long.valueOf(getModificado());

    case CONTEUDO:
      return getConteudo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case STATUS:
      return isSetStatus();
    case VERSAO:
      return isSetVersao();
    case CRIADO:
      return isSetCriado();
    case MODIFICADO:
      return isSetModificado();
    case CONTEUDO:
      return isSetConteudo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Retorno)
      return this.equals((Retorno)that);
    return false;
  }

  public boolean equals(Retorno that) {
    if (that == null)
      return false;

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_versao = true;
    boolean that_present_versao = true;
    if (this_present_versao || that_present_versao) {
      if (!(this_present_versao && that_present_versao))
        return false;
      if (this.versao != that.versao)
        return false;
    }

    boolean this_present_criado = true;
    boolean that_present_criado = true;
    if (this_present_criado || that_present_criado) {
      if (!(this_present_criado && that_present_criado))
        return false;
      if (this.criado != that.criado)
        return false;
    }

    boolean this_present_modificado = true;
    boolean that_present_modificado = true;
    if (this_present_modificado || that_present_modificado) {
      if (!(this_present_modificado && that_present_modificado))
        return false;
      if (this.modificado != that.modificado)
        return false;
    }

    boolean this_present_conteudo = true && this.isSetConteudo();
    boolean that_present_conteudo = true && that.isSetConteudo();
    if (this_present_conteudo || that_present_conteudo) {
      if (!(this_present_conteudo && that_present_conteudo))
        return false;
      if (!this.conteudo.equals(that.conteudo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(Retorno other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    Retorno typedOther = (Retorno)other;

    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(typedOther.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, typedOther.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersao()).compareTo(typedOther.isSetVersao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.versao, typedOther.versao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCriado()).compareTo(typedOther.isSetCriado());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCriado()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.criado, typedOther.criado);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModificado()).compareTo(typedOther.isSetModificado());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModificado()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modificado, typedOther.modificado);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConteudo()).compareTo(typedOther.isSetConteudo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConteudo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conteudo, typedOther.conteudo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Retorno(");
    boolean first = true;

    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("versao:");
    sb.append(this.versao);
    first = false;
    if (!first) sb.append(", ");
    sb.append("criado:");
    sb.append(this.criado);
    first = false;
    if (!first) sb.append(", ");
    sb.append("modificado:");
    sb.append(this.modificado);
    first = false;
    if (isSetConteudo()) {
      if (!first) sb.append(", ");
      sb.append("conteudo:");
      if (this.conteudo == null) {
        sb.append("null");
      } else {
        org.apache.thrift.TBaseHelper.toString(this.conteudo, sb);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RetornoStandardSchemeFactory implements SchemeFactory {
    public RetornoStandardScheme getScheme() {
      return new RetornoStandardScheme();
    }
  }

  private static class RetornoStandardScheme extends StandardScheme<Retorno> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Retorno struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = RetornoStatus.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // VERSAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.versao = iprot.readI64();
              struct.setVersaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CRIADO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.criado = iprot.readI64();
              struct.setCriadoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MODIFICADO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.modificado = iprot.readI64();
              struct.setModificadoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CONTEUDO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.conteudo = iprot.readBinary();
              struct.setConteudoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Retorno struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeI32(struct.status.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VERSAO_FIELD_DESC);
      oprot.writeI64(struct.versao);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CRIADO_FIELD_DESC);
      oprot.writeI64(struct.criado);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MODIFICADO_FIELD_DESC);
      oprot.writeI64(struct.modificado);
      oprot.writeFieldEnd();
      if (struct.conteudo != null) {
        if (struct.isSetConteudo()) {
          oprot.writeFieldBegin(CONTEUDO_FIELD_DESC);
          oprot.writeBinary(struct.conteudo);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RetornoTupleSchemeFactory implements SchemeFactory {
    public RetornoTupleScheme getScheme() {
      return new RetornoTupleScheme();
    }
  }

  private static class RetornoTupleScheme extends TupleScheme<Retorno> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Retorno struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetStatus()) {
        optionals.set(0);
      }
      if (struct.isSetVersao()) {
        optionals.set(1);
      }
      if (struct.isSetCriado()) {
        optionals.set(2);
      }
      if (struct.isSetModificado()) {
        optionals.set(3);
      }
      if (struct.isSetConteudo()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status.getValue());
      }
      if (struct.isSetVersao()) {
        oprot.writeI64(struct.versao);
      }
      if (struct.isSetCriado()) {
        oprot.writeI64(struct.criado);
      }
      if (struct.isSetModificado()) {
        oprot.writeI64(struct.modificado);
      }
      if (struct.isSetConteudo()) {
        oprot.writeBinary(struct.conteudo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Retorno struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.status = RetornoStatus.findByValue(iprot.readI32());
        struct.setStatusIsSet(true);
      }
      if (incoming.get(1)) {
        struct.versao = iprot.readI64();
        struct.setVersaoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.criado = iprot.readI64();
        struct.setCriadoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.modificado = iprot.readI64();
        struct.setModificadoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.conteudo = iprot.readBinary();
        struct.setConteudoIsSet(true);
      }
    }
  }

}

